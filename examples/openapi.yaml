openapi: 3.0.0
info:
  title: vectorflow
  version: 1.0.0
  description: 
    This is a sample API that provides basic functionality to demonstrate the OpenAPI specification. 
    - Embed Raw Data From Any Source. Our technology-agnostic system can embed large volumes of data from any type of source.
    - No Infrastructure Worries. Don't worry about setting up complex infrastructure. We provide an easy-to-use infrastructure as a self-hosted service and a managed service.
    - Out-of-the-box Highly Performant. The embedding process can be easily parallelized and scaled to handle large volumes of data quickly. It retries automatically to ensure all your data is always embedded.
servers:
  - url: http://localhost:8000
paths:
  /embed:
    post:
      tags:
        - General
      summary: Embeds
      description: Embeds
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                VectorDBMetadata:
                  type: object
                  description: Metadata related to Vector DB
                  properties: {} # Define properties for VectorDBMetadata if available
                EmbeddingsMetadata:
                  type: object
                  description: Metadata related to Embeddings
                  properties: {} # Define properties for EmbeddingsMetadata if available
                SourceData:
                  type: string
                  description: Binary file string
                  format: binary
            example:
              VectorDBMetadata: {}
              EmbeddingsMetadata: {}
              SourceData: "binary file string"
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: X-VectorDB-Key
          in: header
          required: true
          schema:
            type: string
        - name: X-EmbeddingAPI-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /s3:
    post:
      tags:
        - General
      summary: s3
      description: Allows you passed a signed s3 url and generate an embedding
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                VectorDBMetadata:
                  type: object
                  description: Metadata related to Vector DB
                  properties: {} # Define properties for VectorDBMetadata if available
                EmbeddingsMetadata:
                  type: object
                  description: Metadata related to Embeddings
                  properties: {} # Define properties for EmbeddingsMetadata if available
                PreSignedURL:
                  type: string
                  description: Pre-signed URL for S3
            example:
              VectorDBMetadata: {}
              EmbeddingsMetadata: {}
              PreSignedURL: "https://s3.example.com/pre-signed-url"
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: X-VectorDB-Key
          in: header
          required: true
          schema:
            type: string
        - name: X-EmbeddingAPI-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /images:
    post:
      tags:
        - General
      summary: Image Embeddings
      description: "Send a POST request to the /images endpoint to utilize this capability. You pass the same set of fields in VectorDBMetadata as you would for the /embed or /s3 endpoints but for EmbeddingsMetadata you only need to pass \"embeddings_type\": \"IMAGE\"."
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                VectorDBMetadata:
                  type: object
                  description: Metadata related to Vector DB
                  properties: {} # Define properties for VectorDBMetadata if available
                EmbeddingsMetadata:
                  type: object
                  description: Metadata related to Embeddings
                  properties:
                    embeddings_type:
                      type: string
                      enum: ["IMAGE"]
                      description: Type of embeddings for images
            example:
              VectorDBMetadata: {}
              EmbeddingsMetadata:
                embeddings_type: "IMAGE"
              SourceData: "binary file string"
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: X-VectorDB-Key
          in: header
          required: true
          schema:
            type: string
        - name: X-EmbeddingAPI-Key
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
